@charset "UTF-8";
$text-color-primary: #fff;

// Breakpoints
$w-mobile: 479px;
$w-mobile-l: 767px;
$w-tablet: 959px;
$w-desktop: 1140px;

$mobile: new-breakpoint(max-width $w-mobile 6);
$mobile-wide: new-breakpoint(max-width $w-mobile-l 6);
$tablet: new-breakpoint(max-width $w-tablet 12);
$desktop: new-breakpoint(max-width $w-desktop 12);
$full: new-breakpoint(min-width $w-desktop+1 12);

$mobile-wide-only: new-breakpoint(min-width $w-mobile+1px max-width $w-mobile-l 6);
$tablet-only: new-breakpoint(min-width $w-mobile-l+1px max-width $w-tablet 12);
$desktop-only: new-breakpoint(min-width $w-tablet+1px max-width $w-desktop 12);

$tablet-desktop-only: new-breakpoint(min-width $w-mobile-l+1px max-width $w-desktop 12);

$tablet-and-up: new-breakpoint(min-width $w-mobile-l+1px);
$desktop-and-up: new-breakpoint(min-width $w-tablet+1px 12);

@mixin srcset ($prefix, $suffix) {
    @include media($mobile) {
        background-image: url($prefix + 'small' + $suffix);
    }
    @include media($mobile-wide-only) {
        background-image: url($prefix + 'medium' + $suffix);
    }
    @include media($tablet-desktop-only) {
        background-image: url($prefix + 'large' + $suffix);
    }
    @include media($full) {
        background-image: url($prefix + 'ultra' + $suffix);
    }
}

@mixin x-rgba ($property, $r, $g, $b, $a) {
    #{$property}: rgb($r, $g, $b);
    #{$property}: rgba($r, $g, $b, $a);
}

@mixin x-rgba-l ($property, $list) {
    $r: nth($list, 1);
    $g: nth($list, 2);
    $b: nth($list, 3);
    $a: nth($list, 4);
    #{$property}: rgb($r, $g, $b);
    #{$property}: rgba($r, $g, $b, $a);
}

@function strip-unit ($num) {
    @return $num / ($num * 0 + 1);
}

@mixin x-rem ($property, $values...) {
    $max: length($values);
    $pxValues: '';
    $remValues: '';

    @for $i from 1 through $max {
        $value: strip-unit(nth($values, $i));
        $pxValues: #{$pxValues + $value*16}px;

        @if $i < $max {
            $pxValues: #{$pxValues + " "};
        }
    }

    @for $i from 1 through $max {
        $value: strip-unit(nth($values, $i));
        $remValues: #{$remValues + $value}rem;

        @if $i < $max {
            $remValues: #{$remValues + " "};
        }
    }

    #{$property}: $pxValues;
    #{$property}: $remValues;
}